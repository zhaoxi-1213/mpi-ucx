/*
 * Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
 *                         University Research and Technology
 *                         Corporation.  All rights reserved.
 * Copyright (c) 2004-2005 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,
 *                         University of Stuttgart.  All rights reserved.
 * Copyright (c) 2004-2005 The Regents of the University of California.
 *                         All rights reserved.
 * Copyright (c) 2011-2012 Cisco Systems, Inc.  All rights reserved.
 * Copyright (c) 2015      Research Organization for Information Science
 *                         and Technology (RIST). All rights reserved.
 * Copyright (c) 2024-2025 Triad National Security, LLC. All rights
 *                         reserved.
 * $COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * $HEADER$
 */

PROTOTYPE VOID get_elements(STATUS status, DATATYPE datatype, COUNT_OUT count)
{
    int c_ierr = MPI_SUCCESS;
    MPI_Datatype c_type = PMPI_Type_f2c(*datatype);
    MPI_Status   c_status;
    @COUNT_TYPE@ c_count = 0;

    if (!OMPI_IS_FORTRAN_STATUS_IGNORE(status)) {
        c_ierr = PMPI_Status_f2c(status, &c_status);
        if (MPI_SUCCESS == c_ierr) {
            c_ierr = @INNER_CALL@(&c_status, c_type,
                                      &c_count);
        }
    }

    if (MPI_SUCCESS == c_ierr) {
        *count = (@COUNT_FINT_TYPE@)(c_count);
    }
    if (NULL != ierr) *ierr = OMPI_INT_2_FINT(c_ierr);
}
